//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from grammar/Gramatica.g4 by ANTLR 4.9.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IGramaticaListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.2")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class GramaticaBaseListener : IGramaticaListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="GramaticaParser.start"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStart([NotNull] GramaticaParser.StartContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GramaticaParser.start"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStart([NotNull] GramaticaParser.StartContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Atribuicao</c>
	/// labeled alternative in <see cref="GramaticaParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAtribuicao([NotNull] GramaticaParser.AtribuicaoContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Atribuicao</c>
	/// labeled alternative in <see cref="GramaticaParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAtribuicao([NotNull] GramaticaParser.AtribuicaoContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Expressao</c>
	/// labeled alternative in <see cref="GramaticaParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpressao([NotNull] GramaticaParser.ExpressaoContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Expressao</c>
	/// labeled alternative in <see cref="GramaticaParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpressao([NotNull] GramaticaParser.ExpressaoContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Numero</c>
	/// labeled alternative in <see cref="GramaticaParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumero([NotNull] GramaticaParser.NumeroContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Numero</c>
	/// labeled alternative in <see cref="GramaticaParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumero([NotNull] GramaticaParser.NumeroContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Variavel</c>
	/// labeled alternative in <see cref="GramaticaParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariavel([NotNull] GramaticaParser.VariavelContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Variavel</c>
	/// labeled alternative in <see cref="GramaticaParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariavel([NotNull] GramaticaParser.VariavelContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Parenteses</c>
	/// labeled alternative in <see cref="GramaticaParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParenteses([NotNull] GramaticaParser.ParentesesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Parenteses</c>
	/// labeled alternative in <see cref="GramaticaParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParenteses([NotNull] GramaticaParser.ParentesesContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Multiplicacao_Divisao</c>
	/// labeled alternative in <see cref="GramaticaParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultiplicacao_Divisao([NotNull] GramaticaParser.Multiplicacao_DivisaoContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Multiplicacao_Divisao</c>
	/// labeled alternative in <see cref="GramaticaParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultiplicacao_Divisao([NotNull] GramaticaParser.Multiplicacao_DivisaoContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Soma_Subtracao</c>
	/// labeled alternative in <see cref="GramaticaParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSoma_Subtracao([NotNull] GramaticaParser.Soma_SubtracaoContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Soma_Subtracao</c>
	/// labeled alternative in <see cref="GramaticaParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSoma_Subtracao([NotNull] GramaticaParser.Soma_SubtracaoContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
